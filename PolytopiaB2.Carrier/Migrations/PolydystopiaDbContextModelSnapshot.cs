// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PolytopiaB2.Carrier.Database;

#nullable disable

namespace PolytopiaB2.Carrier.Migrations
{
    [DbContext(typeof(PolydystopiaDbContext))]
    partial class PolydystopiaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.20");

            modelBuilder.Entity("PolytopiaB2.Carrier.Database.Friendship.FriendshipEntity", b =>
                {
                    b.Property<Guid>("UserId1")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId2")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId1", "UserId2");

                    b.HasIndex("UserId2");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("PolytopiaBackendBase.Auth.PolytopiaUserViewModel", b =>
                {
                    b.Property<Guid>("PolytopiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("AllowsFriendRequests")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("AvatarStateData")
                        .HasColumnType("BLOB");

                    b.Property<string>("CmUserData")
                        .HasColumnType("TEXT");

                    b.Property<string>("Defeats")
                        .HasColumnType("TEXT");

                    b.Property<int>("Elo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FriendCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("GameVersions")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MultiplayerRating")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NumFriends")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NumGames")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NumMultiplayergames")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SteamId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnlockedSkins")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnlockedTribes")
                        .HasColumnType("TEXT");

                    b.Property<bool>("UserMigrated")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Victories")
                        .HasColumnType("TEXT");

                    b.HasKey("PolytopiaId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PolytopiaB2.Carrier.Database.Friendship.FriendshipEntity", b =>
                {
                    b.HasOne("PolytopiaBackendBase.Auth.PolytopiaUserViewModel", "User1")
                        .WithMany()
                        .HasForeignKey("UserId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PolytopiaBackendBase.Auth.PolytopiaUserViewModel", "User2")
                        .WithMany()
                        .HasForeignKey("UserId2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User1");

                    b.Navigation("User2");
                });
#pragma warning restore 612, 618
        }
    }
}
